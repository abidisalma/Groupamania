{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abidi\\\\OneDrive\\\\Bureau\\\\Groupamania\\\\frontend\\\\src\\\\components\\\\Content.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport Post from \"../services/post.services\";\nimport Posts from \"./Posts\"; // declaration de la fonction pour afficher la liste des poste\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Content() {\n  _s();\n\n  // declaration d'un variable liste post\n  // listposts : variable\n  // setListposts : fonction pour remplir le variable listpost\n  const [listposts, setListposts] = useState([]); // declaration d'un variable count = 0\n  // utiliser dans useeffect pour executer useeffect une seule fois\n\n  let count = 0; // connexion pour executer une fonction a chaque changement de statut de composant\n\n  useEffect(() => {\n    // fonction pour executer la fonction getall (appel api pour recuoerer tous les posts dans la base backend)\n    Post.getAll().then(response => {\n      setListposts(response.data);\n      console.log(response.data);\n    }).catch();\n  }, [count]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: listposts && (listposts === null || listposts === void 0 ? void 0 : listposts.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(Posts, {\n        data: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this);\n    }))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Content, \"ef/3tWPrrnYfQqJcr5BDvabRXjM=\");\n\n_c = Content;\nexport default Content;\n\nvar _c;\n\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"names":["useEffect","useState","Post","Posts","Content","listposts","setListposts","count","getAll","then","response","data","console","log","catch","map","item","index"],"sources":["C:/Users/abidi/OneDrive/Bureau/Groupamania/frontend/src/components/Content.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport Post from \"../services/post.services\";\r\nimport Posts from \"./Posts\";\r\n// declaration de la fonction pour afficher la liste des poste\r\nfunction Content() {\r\n\t// declaration d'un variable liste post\r\n\t// listposts : variable\r\n\t// setListposts : fonction pour remplir le variable listpost\r\n\tconst [listposts, setListposts] = useState([]);\r\n\t// declaration d'un variable count = 0\r\n\t// utiliser dans useeffect pour executer useeffect une seule fois\r\n\tlet count = 0;\r\n\t// connexion pour executer une fonction a chaque changement de statut de composant\r\n\tuseEffect(() => {\r\n\t\t// fonction pour executer la fonction getall (appel api pour recuoerer tous les posts dans la base backend)\r\n\t\tPost.getAll()\r\n\t\t\t.then(response => {\r\n\t\t\t\tsetListposts(response.data);\r\n\t\t\t\tconsole.log(response.data);\r\n\t\t\t})\r\n\t\t\t.catch();\r\n\t}, [count]);\r\n\r\n\treturn (\r\n\t\t<div className=\"content\">\r\n\t\t\t{/* verifier s'il existe un variable listpost et parcourir pour afficher les post */}\r\n\t\t\t{listposts &&\r\n\t\t\t\tlistposts?.map((item, index) => {\r\n\t\t\t\t\treturn <Posts data={item} key={index} />;\r\n\t\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Content;\r\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,2BAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CACA;;;;AACA,SAASC,OAAT,GAAmB;EAAA;;EAClB;EACA;EACA;EACA,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C,CAJkB,CAKlB;EACA;;EACA,IAAIM,KAAK,GAAG,CAAZ,CAPkB,CAQlB;;EACAP,SAAS,CAAC,MAAM;IACf;IACAE,IAAI,CAACM,MAAL,GACEC,IADF,CACOC,QAAQ,IAAI;MACjBJ,YAAY,CAACI,QAAQ,CAACC,IAAV,CAAZ;MACAC,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACC,IAArB;IACA,CAJF,EAKEG,KALF;EAMA,CARQ,EAQN,CAACP,KAAD,CARM,CAAT;EAUA,oBACC;IAAK,SAAS,EAAC,SAAf;IAAA,UAEEF,SAAS,KACTA,SADS,aACTA,SADS,uBACTA,SAAS,CAAEU,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,KAAiB;MAC/B,oBAAO,QAAC,KAAD;QAAO,IAAI,EAAED;MAAb,GAAwBC,KAAxB;QAAA;QAAA;QAAA;MAAA,QAAP;IACA,CAFD,CADS;EAFX;IAAA;IAAA;IAAA;EAAA,QADD;AASA;;GA5BQb,O;;KAAAA,O;AA8BT,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}